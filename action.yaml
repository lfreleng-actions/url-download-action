---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# url-download-action
name: "üåç Download Content from URL"
description: "Uses WGET to download the content from a given URL"

inputs:
  # Mandatory
  url:
    description: 'URL to download'
    required: true
    # type: 'string'
  # Optional
  exit_on_fail:
    description: 'Exit with error if download fails'
    required: false
    # type: 'boolean'
    default: true
  no_clobber:
    description: 'Will not overwrite existing local file'
    required: false
    # type: 'boolean'
    default: false
  path:
    description: 'Save file to this local file system path'
    required: false
    # type: 'string'
  wget_flags:
    description: 'Additional/supplmentary flags to wget command'
    required: false
    # type: 'string'
    default: '-q'

runs:
  using: 'composite'
  steps:
    - name: 'Download content at URL üåç'
      shell: bash
      run: |
        # Download content at URL üåç

        wget_cmd=$(which wget)
        if [ ! -x "$wget_cmd" ]; then
          echo 'Error: WGET command not found in path ‚ùå'
          echo 'Check runner and operating system environment'
          exit 1
        fi
        # Process inputs, set variable/parameters
        url="${{ inputs.url }}"
        exit_on_fail="${{ inputs.exit_on_fail }}"
        no_clobber="${{ inputs.no_clobber }}"
        wget_flags="${{ inputs.wget_flags }}"
        path="${{ inputs.path }}"
        if [ "f$no_clobber" = 'ftrue' ]; then
          wget_flags="$wget_flags --no-clobber"
        fi
        if [ -n "$path" ]; then
          wget_flags="$wget_flags -O $path"
        fi

        echo "Command: $wget_cmd $wget_flags üí¨"
        echo 'Downloading:'
        echo "$url"

        # Perform the download
        $wget_cmd $url $wget_flags

        # Validate downloaded content, exit appropriately
        if [ -n "$path" ]; then
          download="$path"
        else
          download=$(basename "$url")
        fi
        if [ -f "$download" ]; then
          echo 'Download content found in place ‚úÖ'
        else
          echo 'Error: content download failed ‚ùå'
          if [ "f$exit_on_fail" = 'ftrue' ]; then
            exit 1
          fi
        fi
